@use '../components/base' as *;

.projects {
  padding: var(--spacing-4xl) var(--spacing-base);
  background: var(--gradient-hero);

  &__container {
    max-width: 72rem;
    margin-inline: auto;
    text-align: center;
  }

  &__header {
    margin-bottom: var(--spacing-2xl);
    @include heading-2-style;
    color: var(--color-secondary);
  }

  &__grid {
    display: grid;
    // most used grid style
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: var(--spacing-xl);
  }

  &__card-container {
    width: 100%;
    height: 360px;
    text-align: left;
    // overflow: hidden;
    // to give more 3D effect
    perspective: 800px;
  }

  &__card {
    // refer to card container
    width: 100%;
    height: 100%;
    
    // for card sides
    position: relative;
    transition: all 1500ms cubic-bezier(0.4, 0.0, 0.2, 1);
    transform-style: preserve-3d;

    // as the container is fixed and card rotated ,rotation effect might be discomfort, When moving mouse over the card continuesly , rotation seems incomplete. Hover states defined below in container class
    /*     &:hover {
      cursor: pointer;
      transform: rotateY(180deg);s
    } */

    &-front,
    &-back {
      // relative the size of card
      width: 100%;
      height: 100%;
      // styling
      border-radius: 1rem;
      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
      // card move on top of each other
      position: absolute;
      // to hide backfaces of both cards
      backface-visibility: hidden;
    }

    &-front {
      background: var(--color-white);
      overflow: hidden;
      display: flex;
      flex-direction: column;
      img {
        width: 100%;
        height: 192px;
        object-fit: cover;
      }

      div {
        padding: 20px;
        display: flex;
        flex-direction: column;
        flex-grow: 1;
        gap: var(--spacing-sm);

        h3 {
          font-size: var(--font-size-lg);
          font-weight: 700;
          color: var(--color-secondary);
          line-height: var(--line-height-normal);
          height: 50px;
        }

        p {
          margin-top: auto;
          font-size: var(--font-size-sm);
          color: var(--color-text-secondary);
          line-height: 1.25;
          flex-grow: 1;
        }
      }
    }

    &-back {

      background: var(--gradient-project-card);
      // back of the card is already facing well backwards
      transform: rotateY(180deg);

      h3,
      p,
      .techs,
      .links {
        margin: 0;
        padding: 0;
      }

      .back {
        display: flex;
        flex-direction: column;
        padding: var(--spacing-lg);
        height: 100%;

        &__title {
          margin-bottom: var(--spacing-md);
          font-size: var(--font-size-xl);
          font-weight: var(--font-weight-bold);
          color: var(--color-white);
          line-height: var(--line-height-relaxed);

        }

        &__description {
          flex-grow: 1;
          margin-bottom: var(--spacing-base);
          color: var(--color-white-90);
          font-size: var(--font-size-sm);
          font-weight: var(--font-weight-regular);
        }

        &__tech {
          display: flex;
          flex-wrap: wrap;
          gap: var(--spacing-sm);       
          margin-bottom: var(--spacing-base);

          span {
            font-size: var(--font-size-xs);
            font-weight: var(--font-weight-regular);
            padding: var(--spacing-xs) var(--spacing-md);
            background-color: var(--color-white-20);
            color: var(--color-white);
            border-radius: 9999px;
          }
        }

        &__links {
          display: flex;
          gap: var(--spacing-xs);
          

          .code,
          .demo {
            display: flex;
            gap: var(--spacing-sm);
            align-items: center;
            padding: var(--spacing-sm) var(--spacing-base);
            border-radius: 8px;
            font-size: var(--font-size-sm);
            font-weight: var(--font-weight-medium);
          }

          .code {
            background-color: var(--color-white);
            color: var(--color-primary);

            &:hover,
            &:focus {
              background-color: var(--color-white-90);
            }
          }

          .demo {
            background-color: rgba(255, 255, 255, 0.2);
            border: 1px solid var(--color-white);
            color: var(--color-white);

            &:hover,
            &:focus {
              background-color: rgba(255, 255, 255, 0.3);
            }
          }
        }
      }

    }
  }

  // so hover effect on card is applied here
  &__card-container:hover>.projects__card {
    cursor: pointer;
    transform: rotateY(180deg);
  }


}